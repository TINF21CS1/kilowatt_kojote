openapi: "3.0.0"
info:
  version: "0.0.1"
  title: "Kilowatt Kojote"

servers:
  - url: "https://www.kilowattkojote.de/api"

paths:
  /smartmeter/register:
    post:
      requestBody:
        content:
          application/json:
            example: '{"type": 0}'
            schema: {
              "type": "object",
              "properties": {
                "type": {
                  "description": "Type of the smartmeter",
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 3
                },
                "latitude": {
                  "description": "Latitude of the smartmeter",
                  "type": "number",
                  "minimum": -90,
                  "maximum": 90,
                  "multipleOf": 0.00001
                },
                "longitude": {
                  "description": "Longitude of the smartmeter",
                  "type": "number",
                  "minimum": -180,
                  "maximum": 180,
                  "multipleOf": 0.00001
                }
              },
              "required": ["type"]
            }
        description: "type: 0: residential, 1: industry, 2: feed_in, 3: residential_feed_in"
        required: true
      responses:
        "200":
          description: OK
        "401":
          description: Certificate not Valid
      summary: "Smartmeter Registrieren"

  /smartmeter/data:
    post:
      requestBody:
        content:
          application/json:
            example: '[{"timestamp": 1698934659, "reading": 123456}]'
            schema: {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "timestamp": {
                    "description": "Timestamp of the submitted reading",
                    "type": "integer",
                    "minimum": 1672527600
                  },
                  "reading": {
                    "description": "The reading of the reader at the timestamp",
                    "type": "integer"
                  }
                },
                "required": ["timestamp", "reading"]
              },
              "minItems": 1
            }
        description: "contains one or more datapoints of reading in kWh."
      responses:
        "200":
          description: OK
        "403":
          description: Certificate not Valid
      summary: "Smartmeter Daten einreichen"
  
  /supplier/reading/history:
    get:
      parameters:
        - in: query
          schema:
            type: string
          name: id
          required: true
          description: UUID of the smartmeter to get the reading of
      responses:
        "200":
          description: OK
          content:
            application/json:
              example: '[{"timestamp": 1698934659, "reading": 123456},{"timestamp": 1698934900, "reading": 123457}]'
        "403":
          description: "Requested Meter that is not assigned to Supplier"
  /supplier/reading/current:
    get:
      parameters:
        - in: query
          schema:
            type: string
          name: id
          required: true
          description: UUID of the smartmeter to get the reading of
      responses:
        "200":
          description: OK
          content:
            application/json:
              example: '{"timestamp": 1698934659, "reading": 123456}'
        "403":
          description: "Requested Meter that is not assigned to Supplier"
  
  /supplier/smartmeter:
    get:
      description: Get Smartmeters assigned to own Supplier
      responses:
        "200":
          description: OK
          content:
            application/json:
              example: '[{"uuid": "a3b639f1-1ea2-4eda-97d0-4ddd68b4514a", "type": 0, "latitude": 49.29131, "longitude": 8.69975, "supplier": "EnBW"}]'
